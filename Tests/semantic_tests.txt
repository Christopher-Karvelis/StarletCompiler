			
							SEMANTIC ERROR TESTING 

---> Copy the INPUT field and paste it at a file with .stl extension to test it yourself!
---> Ex. (Running from Linux kernel terminal) $ python3 star_vX.X.X.py example.stl
======================================================================

TEST 1,


INPUT : 
----------------------------------------------------------------------
program sameVarAtDeclare
	declare a,b,a;
	print a;
endprogram
----------------------------------------------------------------------

OUTPUT :
----------------------------------------------------------------------
SEMANTIC ERROR around line 2,
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
program sameVarAtDeclare
	declare a,b,a;
	print a;
endprogram
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
A variable with name 'a' is already exists in program 'sameVarAtDeclare()'!
----------------------------------------------------------------------


======================================================================

TEST 2,


INPUT : 
----------------------------------------------------------------------
program SameVarTwoDeclares
	declare a;
	declare b;
	declare a;
endprogram
----------------------------------------------------------------------

OUTPUT :
----------------------------------------------------------------------
SEMANTIC ERROR around line 4,
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	declare a;
	declare b;
	declare a;
endprogram
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
A variable with name 'a' is already exists in program 'SameVarTwoDeclare()'!
----------------------------------------------------------------------


======================================================================

TEST 3,


INPUT : 
----------------------------------------------------------------------
program SameParAtFuncDef
	function f(in a, inout a)
		return 0
	endfunction
endprogram
----------------------------------------------------------------------

OUTPUT :
----------------------------------------------------------------------
SEMANTIC ERROR around line 2,
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
program SameParAtFuncDef
	function f(in a, inout a)
		return 0
	endfunction

++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
A parameter with name 'a' is already exists in function 'f()'!
----------------------------------------------------------------------


======================================================================

TEST 4,


INPUT : 
----------------------------------------------------------------------
program FunctionDeclareAndPar
	function f(in a)
		declare a;
	endfunction
endprogram
----------------------------------------------------------------------

OUTPUT :
----------------------------------------------------------------------
SEMANTIC ERROR around line 3,
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
program FunctionDeclareAndPar
	function f(in a)
		declare a;
	endfunction
endprogram
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
A variable with name 'a' is already exists in function 'f()'!
----------------------------------------------------------------------


======================================================================

TEST 5,


INPUT : 
----------------------------------------------------------------------
program sameVarAtNestedDeclaresOK
	declare a,b;
	function f()
		declare a,b;
		return 0;
	endfunction
	print a;
endprogram
----------------------------------------------------------------------

OUTPUT :
----------------------------------------------------------------------
Program compiled without errors!
----------------------------------------------------------------------


======================================================================

TEST 6,


INPUT : 
----------------------------------------------------------------------
program sameVarAtDeclareAndFuncParOK
	declare a,b;
	function f(in a)
		declare b;
		return 0;
	endfunction
	print a;
endprogram
----------------------------------------------------------------------

OUTPUT :
----------------------------------------------------------------------
Program compiled without errors!
----------------------------------------------------------------------


======================================================================

TEST 7,


INPUT : 
----------------------------------------------------------------------
program redeclareFunc
	declare a,b;
	function f()
		declare b;
		return 0;
	endfunction
	function f()
		declare w;
		return 5;
	endfunction
	print a;
endprogram
----------------------------------------------------------------------

OUTPUT :
----------------------------------------------------------------------
SEMANTIC ERROR around line 7,
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		return 0;
	endfunction
	function f()
		declare w;
		return 5;

++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
A function with name 'f()' is already exists in program 'redeclareFunc()'!
----------------------------------------------------------------------


======================================================================

TEST 8,


INPUT : 
----------------------------------------------------------------------
program redeclareVarAsFunc
	declare a,b;
	function f()
		declare b;
		return 0;
	endfunction
	function a()
		declare w;
		return 5;
	endfunction
	print a;
endprogram
----------------------------------------------------------------------

OUTPUT :
----------------------------------------------------------------------
SEMANTIC ERROR around line 7,
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		return 0;
	endfunction
	function a()
		declare w;
		return 5;

++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
The name 'a' is already used from a variable in program 'redeclareVarAsFunc()'!
----------------------------------------------------------------------


======================================================================

TEST 9,


INPUT : 
----------------------------------------------------------------------
program redeclareParAsFunc
	declare a,b;
	function f(in a)
		function a()
			declare w;
			return 5;
		endfunction
		return 0;
	endfunction
	print a;
endprogram
----------------------------------------------------------------------

OUTPUT :
----------------------------------------------------------------------
SEMANTIC ERROR around line 4,
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	declare a,b;
	function f(in a)
		function a()
			declare w;
			return 5;

++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
The name 'a' is already used from a variable in function 'f()'!
----------------------------------------------------------------------


======================================================================

TEST 10,


INPUT : 
----------------------------------------------------------------------
program redeclareFuncNestedOK
	declare a,b;
	function f()
		declare b;
		function f()
			declare w;
			return 5;
		endfunction
		return 0;
	endfunction
	
	print a;
endprogram
----------------------------------------------------------------------

OUTPUT :
----------------------------------------------------------------------
Program compiled without errors!
----------------------------------------------------------------------


======================================================================

TEST 11,


INPUT : 
----------------------------------------------------------------------
program undeclaredAssignIDVar
	declare a,b;
	sum := a + b;
	print sum;
endprogram
----------------------------------------------------------------------

OUTPUT :
----------------------------------------------------------------------
SEMANTIC ERROR around line 3,
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
program undeclaredAssignIDVar
	declare a,b;
	sum := a + b;
	print sum;
endprogram
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Undeclared variable 'sum' for program 'undeclaredAssignIDVar()'!
----------------------------------------------------------------------


======================================================================

TEST 12,


INPUT : 
----------------------------------------------------------------------
program declaredAssignIDParOK
	declare a,b;
	function f(in sum)
		sum := a + b;
		print sum;
		return 0
	endfunction
endprogram
----------------------------------------------------------------------

OUTPUT :
----------------------------------------------------------------------
Program compiled without errors!
----------------------------------------------------------------------


======================================================================

TEST 13,


INPUT : 
----------------------------------------------------------------------
program undeclaredAssignIDPar
	declare a,b;
	function f(in sum)
		sum := a + b;
		print sum;
		return 0
	endfunction

	function h()
		sum := a + b;
		print sum;
		return 0
	endfunction

endprogram
----------------------------------------------------------------------

OUTPUT :
----------------------------------------------------------------------
SEMANTIC ERROR around line 10,
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

	function h()
		sum := a + b;
		print sum;
		return 0

++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Undeclared variable 'sum' for function 'h()'!
----------------------------------------------------------------------


======================================================================

TEST 14,


INPUT : 
----------------------------------------------------------------------
program InputUndeclaredVar
	input a;
endprogram
----------------------------------------------------------------------

OUTPUT :
----------------------------------------------------------------------
SEMANTIC ERROR around line 2,
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
program InputUndeclaredVar
	input a;
endprogram
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Undeclared variable 'a' for program 'InputUndeclaredVar()'!
----------------------------------------------------------------------


======================================================================

TEST 15,


INPUT : 
----------------------------------------------------------------------
program ReturnUndeclaredVar
	function f(in b)
		return a + f(in 2)
	endfunction
endprogram
----------------------------------------------------------------------

OUTPUT :
----------------------------------------------------------------------
SEMANTIC ERROR around line 3,
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
program ReturnUndeclaredVar
	function f(in b)
		return a + f(in 2)
	endfunction
endprogram
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Undeclared variable 'a' for function 'f()'!
----------------------------------------------------------------------


======================================================================

TEST 16,


INPUT : 
----------------------------------------------------------------------
program ReturnDeclaredVarOK
	function f(in b, inandout w)
		declare a;
		return -w + f(in 2, inandout a)
	endfunction
endprogram
----------------------------------------------------------------------

OUTPUT :
----------------------------------------------------------------------
Program compiled without errors!
----------------------------------------------------------------------


======================================================================

TEST 17,


INPUT : 
----------------------------------------------------------------------
program FuncParSameName
	function f(inandout f)
		return f;
	endfunction
endprogram
----------------------------------------------------------------------

OUTPUT :
----------------------------------------------------------------------
SEMANTIC ERROR around line 2,
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
program FuncParSameName
	function f(inandout f)
		return f;
	endfunction

++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
A parameter can not have the same name 'f' with the function which belongs!
----------------------------------------------------------------------


======================================================================

TEST 18,


INPUT : 
----------------------------------------------------------------------
program FuncVarSameName
	function f(inandout a)
		declare f;
		return f;
	endfunction
endprogram
----------------------------------------------------------------------

OUTPUT :
----------------------------------------------------------------------
SEMANTIC ERROR around line 3,
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
program FuncVarSameName
	function f(inandout a)
		declare f;
		return f;
	endfunction

++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
A variable can not have the same name 'f' with the function which belongs!
----------------------------------------------------------------------


======================================================================

TEST 19,


INPUT : 
----------------------------------------------------------------------
program FuncFuncNameOverrideOK
	function f(inandout a)
		function f(in a, in b)
			return f(in 0, in 0);
		endfunction
		return 0;
	endfunction
endprogram
----------------------------------------------------------------------

OUTPUT :
----------------------------------------------------------------------
Program compiled without errors!
----------------------------------------------------------------------


======================================================================

TEST 20,


INPUT : 
----------------------------------------------------------------------
program FuncParSameNameOK
	function f(inandout a)
		function h(in f)
			return f;
		endfunction
		return 0;
	endfunction
endprogram
----------------------------------------------------------------------

OUTPUT :
----------------------------------------------------------------------
Program compiled without errors!
----------------------------------------------------------------------


======================================================================

TEST 21,


INPUT : 
----------------------------------------------------------------------
program FuncVarSameNameOK
	function f(inandout a)
		function h()
			declare f;
			return f;
		endfunction
		return 0;
	endfunction
endprogram
----------------------------------------------------------------------

OUTPUT :
----------------------------------------------------------------------
Program compiled without errors!
----------------------------------------------------------------------


======================================================================

TEST 22,


INPUT : 
----------------------------------------------------------------------
program VarOverrideToFunctionOK
	declare a;
	function f(in w)
		function a()
			return a()
		endfunction
		return 2
	endfunction

endprogram
----------------------------------------------------------------------

OUTPUT :
----------------------------------------------------------------------
Program compiled without errors!
----------------------------------------------------------------------


======================================================================

TEST 23,


INPUT : 
----------------------------------------------------------------------
program useFuncAsVar
	function a()
			return a
	endfunction
endprogram
----------------------------------------------------------------------

OUTPUT :
----------------------------------------------------------------------
SEMANTIC ERROR around line 4,
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	function a()
			return a
	endfunction
endprogram
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Undeclared variable 'a' for function 'a()'!
----------------------------------------------------------------------


======================================================================

TEST 24,


INPUT : 
----------------------------------------------------------------------
program useVarAsFunc
	declare a;
	function f()
			return a()
	endfunction
endprogram
----------------------------------------------------------------------

OUTPUT :
----------------------------------------------------------------------
SEMANTIC ERROR around line 4,
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	declare a;
	function f()
			return a()
	endfunction
endprogram
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Undeclared function 'a()' for function 'f()'!
----------------------------------------------------------------------


======================================================================

TEST 25,


INPUT : 
----------------------------------------------------------------------
program useFuncAsVar
	function a()
		return 0
	endfunction
	input a
endprogram
----------------------------------------------------------------------

OUTPUT :
----------------------------------------------------------------------
SEMANTIC ERROR around line 5,
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		return 0
	endfunction
	input a
endprogram
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Undeclared variable 'a' for program 'useFuncAsVar()'!
----------------------------------------------------------------------


======================================================================

TEST 26,


INPUT : 
----------------------------------------------------------------------
program FunctionNotEqualParLens
	declare w;
	function f(in a)
		return 5;
	endfunction
	print 5 + f(in 5, inout w)
endprogram
----------------------------------------------------------------------

OUTPUT :
----------------------------------------------------------------------
SEMANTIC ERROR around line 6,
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		return 5;
	endfunction
	print 5 + f(in 5, inout w)
endprogram
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Function 'f()' takes 1 positional argument, but 2 were given!
----------------------------------------------------------------------


======================================================================

TEST 27,


INPUT : 
----------------------------------------------------------------------
program FunctionNotEqualParPass
	declare a;
	function f(in a, in w)
		return 5;
	endfunction
	print 5 + f(in 5, inout a)
endprogram
----------------------------------------------------------------------

OUTPUT :
----------------------------------------------------------------------
SEMANTIC ERROR around line 6,
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		return 5;
	endfunction
	print 5 + f(in 5, inout a)
endprogram
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Function 'f()' takes 'in' passing mode argument at position 2,
but 'inout' was given!
----------------------------------------------------------------------


======================================================================

TEST 28,


INPUT : 
----------------------------------------------------------------------
program FunctionDeclareFromPar
	function f(inandout a)
		return 5*a;
	endfunction
endprogram
----------------------------------------------------------------------

OUTPUT :
----------------------------------------------------------------------
Program compiled without errors!
----------------------------------------------------------------------


======================================================================

TEST 29,


INPUT : 
----------------------------------------------------------------------
program FunctionRecursiveCall
	function f(in w)
		return f(in 2) + 2
	endfunction

endprogram
----------------------------------------------------------------------

OUTPUT :
----------------------------------------------------------------------
Program compiled without errors!
----------------------------------------------------------------------


======================================================================

TEST 30,


INPUT : 
----------------------------------------------------------------------
program VarOverrideToFunctionOK
	declare a;
	function f(in w)
		function a()
			return a()
		endfunction
		return 2
	endfunction

endprogram
----------------------------------------------------------------------

OUTPUT :
----------------------------------------------------------------------
Program compiled without errors!
----------------------------------------------------------------------


======================================================================

TEST 31,


INPUT : 
----------------------------------------------------------------------
program VarOverrideToFunction
	declare a;
	function f(in w)
		function a()
			return a
		endfunction
		return 2
	endfunction

endprogram
----------------------------------------------------------------------

OUTPUT :
----------------------------------------------------------------------
SEMANTIC ERROR around line 6,
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		function a()
			return a
		endfunction
		return 2
	endfunction

++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Undeclared variable 'a' for function 'a()'!
----------------------------------------------------------------------


======================================================================

TEST 32,


INPUT : 
----------------------------------------------------------------------
program funcNoReturn
	declare a,b;
	function f(in a)
		declare b;
	endfunction
	print a;
endprogram
----------------------------------------------------------------------

OUTPUT :
----------------------------------------------------------------------
SEMANTIC ERROR around line 6,
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		declare b;
	endfunction
	print a;
endprogram
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Function 'f()' has not 'return' statement!
----------------------------------------------------------------------


======================================================================

TEST 33,


INPUT : 
----------------------------------------------------------------------
program nestedFuncNoReturn
	declare a,b;
	function f(in a)
		declare b;
		function h()
		endfunction
		return 0;
	endfunction
	print a;
endprogram
----------------------------------------------------------------------

OUTPUT :
----------------------------------------------------------------------
SEMANTIC ERROR around line 7,
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		function h()
		endfunction
		return 0;
	endfunction
	print a;

++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Function 'h()' has not 'return' statement!
----------------------------------------------------------------------


======================================================================

TEST 34,


INPUT : 
----------------------------------------------------------------------
program returnNotInFunction
	function f1()
		return 0
	endfunction
	if(2>1) then
		return 0;
	endif
endprogram
----------------------------------------------------------------------

OUTPUT :
----------------------------------------------------------------------
SEMANTIC ERROR around line 6,
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	endfunction
	if(2>1) then
		return 0;
	endif
endprogram
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Return statement not within function!
----------------------------------------------------------------------


======================================================================

TEST 35,


INPUT : 
----------------------------------------------------------------------
program exitInWhile
	while(2>1)
		exit;
	endwhile
endprogram
----------------------------------------------------------------------

OUTPUT :
----------------------------------------------------------------------
SEMANTIC ERROR around line 3,
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
program exitInWhile
	while(2>1)
		exit;
	endwhile
endprogram
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Exit statement not within loop!
----------------------------------------------------------------------


======================================================================

TEST 36,


INPUT : 
----------------------------------------------------------------------
program exitInDoWhile
	dowhile
		exit;
	enddowhile(2>1)
endprogram
----------------------------------------------------------------------

OUTPUT :
----------------------------------------------------------------------
SEMANTIC ERROR around line 3,
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
program exitInDoWhile
	dowhile
		exit;
	enddowhile(2>1)
endprogram
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Exit statement not within loop!
----------------------------------------------------------------------


======================================================================

TEST 37,


INPUT : 
----------------------------------------------------------------------
program exitInIf
	if (2>1) then
		exit;
	endif
endprogram
----------------------------------------------------------------------

OUTPUT :
----------------------------------------------------------------------
SEMANTIC ERROR around line 3,
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
program exitInIf
	if (2>1) then
		exit;
	endif
endprogram
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Exit statement not within loop!
----------------------------------------------------------------------


======================================================================

TEST 38,


INPUT : 
----------------------------------------------------------------------
program exitInElse
	if (2>1) then
	else
		exit;
	endif
endprogram
----------------------------------------------------------------------

OUTPUT :
----------------------------------------------------------------------
SEMANTIC ERROR around line 4,
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	if (2>1) then
	else
		exit;
	endif
endprogram
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Exit statement not within loop!
----------------------------------------------------------------------


======================================================================

TEST 39,


INPUT : 
----------------------------------------------------------------------
program exitInForCase
	forcase
		when (2>1):
			exit;
		default: ;; enddefault
	endforcase
endprogram
----------------------------------------------------------------------

OUTPUT :
----------------------------------------------------------------------
SEMANTIC ERROR around line 4,
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	forcase
		when (2>1):
			exit;
		default: ;; enddefault
	endforcase

++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Exit statement not within loop!
----------------------------------------------------------------------


======================================================================

TEST 40,


INPUT : 
----------------------------------------------------------------------
program exitInInCase
	incase
		when (2>1):
			exit;
	endincase
endprogram
----------------------------------------------------------------------

OUTPUT :
----------------------------------------------------------------------
SEMANTIC ERROR around line 4,
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	incase
		when (2>1):
			exit;
	endincase
endprogram
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Exit statement not within loop!
----------------------------------------------------------------------


======================================================================

TEST 41,


INPUT : 
----------------------------------------------------------------------
program exitInProgram
	exit;
endprogram
----------------------------------------------------------------------

OUTPUT :
----------------------------------------------------------------------
SEMANTIC ERROR around line 2,
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
program exitInProgram
	exit;
endprogram
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Exit statement not within loop!
----------------------------------------------------------------------


======================================================================

TEST 42,


INPUT : 
----------------------------------------------------------------------
program exitInFunction
	function f()
		exit;
	endfunction
endprogram
----------------------------------------------------------------------

OUTPUT :
----------------------------------------------------------------------
SEMANTIC ERROR around line 3,
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
program exitInFunction
	function f()
		exit;
	endfunction
endprogram
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Exit statement not within loop!
----------------------------------------------------------------------


======================================================================

TEST 43,


INPUT : 
----------------------------------------------------------------------
program multipleExitsOK
	loop
		exit;
		exit;
		if(2>1)then
			exit;
		else
			exit;
		endif
	endloop

endprogram
----------------------------------------------------------------------

OUTPUT :
----------------------------------------------------------------------
Program compiled without errors!
----------------------------------------------------------------------


======================================================================

TEST XX,


INPUT : 
----------------------------------------------------------------------

----------------------------------------------------------------------

OUTPUT :
----------------------------------------------------------------------

----------------------------------------------------------------------


